CREATE TABLE Customer (
    Customer_Id INT PRIMARY KEY,
    Customer_Name VARCHAR(50)
);

CREATE TABLE Product (
    Product_Id INT PRIMARY KEY,
    Product_Name VARCHAR(50),
    Product_Price INT
);

CREATE TABLE Order_list (
    Order_Id INT PRIMARY KEY,
    Customer_Id INT,
    Ordered_Date DATE,
    FOREIGN KEY (Customer_Id) REFERENCES Customer(Customer_Id)
);

CREATE TABLE Order_Details (
    Order_Detail_Id INT PRIMARY KEY,
    Order_Id INT,
    Product_Id INT,
    Quantity INT,
    FOREIGN KEY (Order_Id) REFERENCES Order_list(Order_Id),
    FOREIGN KEY (Product_Id) REFERENCES Product(Product_Id)
);

INSERT INTO Customer (Customer_Id, Customer_Name) VALUES(1, 'John'),(2, 'Smith'),(3, 'Ricky'),(4, 'Walsh'),(5, 'Stefen'),(6, 'Fleming'),(7, 'Thomson'),(8, 'David');
SELECT * FROM Customer;

INSERT INTO Product (Product_Id, Product_Name, Product_Price)
VALUES (1, 'Television', 19000),(2, 'DVD', 3600),(3, 'Washing Machine', 7600),(4, 'Computer', 35900),(5, 'Ipod', 3210),
(6, 'Panasonic Phone', 2100),(7, 'Chair', 360),(8, 'Table', 490),(9, 'Sound System', 12050),(10, 'Home Theatre', 19350);
SELECT * FROM Product;

INSERT INTO Order_list(Order_Id, Customer_Id, Ordered_Date)
VALUES(1, 4, '2005-01-10'),(2, 2, '2006-02-10'),(3, 3, '2005-03-20'),(4, 3, '2006-03-10'),(5, 1, '2007-04-05'),
(6, 7, '2006-12-13'),(7, 6, '2008-03-13'),(8, 6, '2004-11-29'),(9, 5, '2005-01-13'),(10, 1, '2007-12-12');
SELECT * FROM Order_list;

INSERT INTO Order_Details (Order_Detail_Id, Order_Id, Product_Id, Quantity)
VALUES(1, 1, 3, 1),(2, 1, 2, 3),(3, 2, 10, 2),(4, 3, 7, 10),(5, 3, 4, 2),(6, 3, 5, 4),(7, 4, 3, 1),
(8, 5, 1, 2),(9, 5, 2, 1),(10, 6, 5, 1),(11, 7, 6, 1),(12, 8, 10, 2),(13, 8, 3, 1),(14, 9, 10, 3),(15, 10, 1, 1);
SELECT * FROM Order_Details;

Assignment Solution:

1)SELECT c.Customer_Id, c.Customer_Name, p.Product_Name
FROM Order_list o,Customer c,Order_details od,Product p WHERE od.Product_Id=p.Product_Id AND c.Customer_Id=o.Customer_Id AND o.Order_id=od.Order_id;

2)SELECT o.Order_Id,p.Product_Id,o.Ordered_Date,p.Product_Price*od.Quantity as Total_Price
FROM Order_list o,Product p,Order_Details od WHERE o.Order_Id=od.Order_Id AND p.Product_Id=od.Product_Id;

3)SELECT * FROM Customer WHERE Customer_Id NOT IN(SELECT Customer_Id FROM Order_list);

4)SELECT * FROM Product WHERE Product_Id NOT IN(SELECT Product_Id FROM Order_Details);

5)SELECT Customer_Name,SUM(p.Product_Price*od.Quantity)  as Total_Purchase_Amount FROM Customer,Product p,Order_list o,Order_Details od WHERE od.Product_Id=p.Product_Id AND od.Order_Id=o.Order_Id AND Customer.Customer_Id=o.Customer_Id GROUP BY Customer_Name ; 

6)SELECT c.*
FROM Customer c,Order_list o 
WHERE c.Customer_Id = o.Customer_Id
AND (Ordered_Date = (SELECT MAX(Ordered_Date) FROM Order_list) OR Ordered_Date = (SELECT MIN(Ordered_Date) FROM Order_list));

7)SELECT c.*,COUNT(o.Customer_Id) as Total_order 
FROM Customer c,Order_list o 
WHERE o.Customer_Id=c.Customer_Id 
GROUP BY c.Customer_Id ORDER BY Total_Order DESC LIMIT 1;

8)SELECT c.Customer_Id, c.Customer_Name, YEAR(o.Ordered_Date) as order_year, COUNT(DISTINCT o.Order_Id) as num_orders
FROM Customer c
JOIN Order_list o ON c.Customer_Id = o.Customer_Id
GROUP BY c.Customer_Id, c.Customer_Name, YEAR(o.Ordered_Date)
HAVING COUNT(DISTINCT o.Order_Id) > 1
ORDER BY order_year DESC;

9)SELECT DATE_FORMAT(o.Ordered_Date,'%M') as order_month, COUNT(o.Order_Id) as num_orders
FROM Order_list o
GROUP BY order_month
ORDER BY num_orders DESC
LIMIT 1;

10)SELECT p.Product_Name, MAX(p.Product_Price) as max_price
FROM Product p,Order_Details od WHERE p.Product_Id = od.Product_Id
GROUP BY p.Product_Name
ORDER BY max_price DESC LIMIT 1;
